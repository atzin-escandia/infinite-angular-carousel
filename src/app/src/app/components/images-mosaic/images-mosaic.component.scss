@import '@crowdfarming/ds-library/src/styles/global';
@import '../../../scss/variables.scss';

.images-mosaic {
  position: relative;
  width: 100%;

  &__grid {
    position: relative;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    border: pxToRem(1) solid map_get($layerBackgroundColors, 'background-1');
    gap: pxToRem(2);
    overflow: hidden;
    width: 100%;
    max-width: 100%;
    max-height: pxToRem(185);
    border-radius: pxToRem(8) pxToRem(8) 0 0;
    aspect-ratio: 1;

    &--order {
      aspect-ratio: auto;
      min-height: pxToRem(110);
    }

    &--list {
      border-radius: pxToRem(8);
    }

    &--radius-fixed {
      border-radius: pxToRem(8);
    }
  }

  &__item {
    position: relative;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;

    /*
      :first-child:nth-last-child(2) => It is applied to the first element when the list contains two elements
        first-child: Represents the first element among a group of sibling elements.
        nth-last-child(2): Choose the second element counting from the end
      :nth-child(-n + 3):last-child => Applies to the last element within the group of the first 3 elements
        nth-child(-n + 3): Applies to the first 3 elements
        last-child: Applies to the last element
    */

    &:first-child:nth-last-child(2),
    &:nth-child(-n + 3):last-child {
      grid-column-start: 1;
      grid-column-end: 3;
    }

    &--not-available {
      filter: saturate(0%);
    }

    &--more:last-child {
      &::after {
        content: '\eb69';
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        display: flex;
        font-family: 'Eva-Icons', sans-serif;
        font-size: pxToRem(32);
        justify-content: center;
        align-items: center;
        color: map_get($layerBackgroundColors, 'background-1');
        background: linear-gradient(0deg, rgba(9, 65, 59, 0.48), rgba(9, 65, 59, 0.48));
      }
    }

    &--shadow {
      box-shadow: 0 0 4px rgba(4, 37, 34, 0.12), 0 2px 4px rgba(4, 37, 34, 0.16);
    }
  }

  @include bp(device-s) {
    &__grid {
      max-height: none;
      aspect-ratio: 1/1;
      border-radius: pxToRem(8);
    }
  }

  @media (min-width: map_get($grid-breakpoints, 'lg')) {
    &__grid {
      aspect-ratio: 1/1;

      &--order {
        min-height: auto;
        max-height: none;
      }
    }
  }
}
