@import '../../../scss/colors.scss';
@import '../../../scss/variables.scss';

.overlay {
  display: flex;
  flex-direction: column;
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 900;
  transition: opacity 0.25s ease 0.1s, background 0.25s ease 0.1s;

  &-open {
    transition: opacity 0.25s ease, background 0.25s ease;
    opacity: 0.24;
    background-color: #1a1a1a;
  }

  &-transparent {
    opacity: 0;
  }

  &.popup-status-wrapper {
    @media (min-width: map_get($grid-breakpoints, 'md')) {
      z-index: 100;
    }
  }
}

.popup {
  &-wrapper {
    height: 100%;
    left: 0;
    overflow: auto;
    position: fixed;
    top: 0;
    width: 100vw;
    z-index: 2001;
  }

  &-buttons {
    position: absolute;
    right: 8px;
    top: 8px;

    &-close {
      color: map_get($color, 'black-2');
      transition: transform 0.35s ease, opacity 0.35s ease;

      @media (max-width: map_get($grid-breakpoints, 'md')) {
        transform: translateY(300px);
        opacity: 0;
      }
    }
  }

  &-body {
    display: inline-block;
    position: relative;
    max-height: 80vh;

    // Desktop effect

    @media (min-width: map_get($grid-breakpoints, 'md')) {
      transition: 0.2s transform ease, 0.2s opacity ease;
      transform: scale(0.7);
      opacity: 0;

      [class*='-popup-container'] > * {
        transition: 0.4s opacity ease 0.1s;
        opacity: 0;
      }
    }

    // Base for all popups
    // Popups needs to have "NameOfPopup-popup-container" as a base class

    [class*='-popup-container'] {
      // => contains with"-popup-container"
      max-width: 400px;
      width: 400px;
      padding: 16px 24px;
      transition: transform 0.35s ease, opacity 0.35s ease;
      background: map_get($color, 'white-1');
      box-shadow: $popupShadow 0 0 15px;
      border-radius: 5px;

      @media (max-width: map_get($grid-breakpoints, 'md')) {
        width: 100vw;
        max-width: 100vw;
        border-radius: 5px 5px 0 0;

        // Close mobile effect
        transform: translateY(300px);
        opacity: 0;
        overflow: hidden;
      }

      .popup- {
        &header-title {
          width: 100%;
          margin-bottom: 8px; // mb-s
          padding-right: 16px; // pr-l
          font-size: 16px; // t-m-medium
          line-height: 24px; // t-m-medium
          font-weight: 500; // t-m-medium
          color: map_get($color, 'black-1'); // t-black-T
        }

        &text-advise {
          background: map_get($color, 'grey-1');
          font-size: 12px;
          line-height: 16px;
          color: rgba(121, 131, 143, 0.9);
          width: calc(100% + 48px);
          position: relative;
          left: -24px;
          bottom: -16px;
          padding: 26px 24px 40px 24px;
        }
      }
    }

    // Open effect

    &-open {
      @media (min-width: map_get($grid-breakpoints, 'md')) {
        transform: scale(1);
        opacity: 1;

        [class*='-popup-container'] > * {
          opacity: 1;
        }
      }

      [class*='-popup-container'],
      .popup-buttons-close {
        @media (max-width: map_get($grid-breakpoints, 'md')) {
          transform: translateY(0);
          opacity: 1;
        }
      }
    }

    [class*='-popup-m-container'] {
      // M Popup => m-container
      max-width: 400px;
      width: 400px;

      @media (max-width: map_get($grid-breakpoints, 'md')) {
        width: 100vw;
        max-width: 100vw;
      }
    }

    [class*='-popup-l-container'] {
      // L Popup => -l-container
      max-width: 504px;
      width: 504px;

      @media (max-width: map_get($grid-breakpoints, 'md')) {
        width: 100vw;
        max-width: 100vw;
      }
    }

    [class*='-popup-fit-container'] {
      // Fit Popup => -fit-container
      max-width: unset;
      width: unset;

      @media (max-width: map_get($grid-breakpoints, 'md')) {
        width: 100vw;
        max-width: 100vw;
      }
    }
  }

  &-status-wrapper {
    @media (min-width: map_get($grid-breakpoints, 'md')) {
      z-index: 100;

      .popups {
        max-width: unset;
      }

      .popup-buttons {
        position: absolute;
        right: 28px;
        top: 33px;
        z-index: 110;
      }
    }
  }
}

.popups {
  position: relative;
  transition: all 1s ease;
  display: inline;
  max-width: 95%;
  border-radius: 0.5rem;

  @media (max-width: map_get($grid-breakpoints, 'md')) {
    max-width: unset;
    display: flex;
  }
}
